<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JJ.Framework.Text</name>
    </assembly>
    <members>
        <member name="M:JJ.Framework.Text.StringExtensions.Left(System.String,System.Int32)">
            <summary>
            Returns the left part of a string.
            Throws an exception if the string has less characters than the length provided.
            </summary>
        </member>
        <member name="M:JJ.Framework.Text.StringExtensions.Right(System.String,System.Int32)">
            <summary>
            Returns the right part of a string.
            Throws an exception if the string has less characters than the length provided.
            </summary>
        </member>
        <member name="M:JJ.Framework.Text.StringExtensions.TakeLeft(System.String,System.Int32)">
            <summary>
            Returns the left part of a string.
            Can return less characters than the length provided if string is shorter.
            </summary>
        </member>
        <member name="M:JJ.Framework.Text.StringExtensions.TakeRight(System.String,System.Int32)">
            <summary>
            Returns the left part of a string.
            Can return less characters than the length provided if string is shorter.
            </summary>
        </member>
        <member name="M:JJ.Framework.Text.StringExtensions.TrimEndUntil(System.String,System.String)">
            <summary>
            Cuts off the right part of a string until the specified delimiter and returns what remains with a portion cut off still including the delimiter itself.
            </summary>
        </member>
        <member name="M:JJ.Framework.Text.StringExtensions.TrimStartUntil(System.String,System.String)">
            <summary>
            Cuts off the right part of a string until the specified delimiter and returns what remains with a portion cut off still including the delimiter itself.
            </summary>
        </member>
        <member name="M:JJ.Framework.Text.StringExtensions.RemoveExcessiveWhiteSpace(System.String)">
            <summary>
            Trims and replaces sequences of two or more white space characters by a single space.
            </summary>
        </member>
        <member name="M:JJ.Framework.Text.StringExtensions_Casing.ToCamelCase(System.String)">
            <summary>
            A little more restrictive than actual C# camel case.
            Only latin accent-free characters, digits and _ will be kept in tact.
            Other characters will be escaped in the form "u" + hex unicode character code.
            This clashes with for intance a literal "u0021", 
            so it is not a full-proof way to generate a unique result.
            </summary>
        </member>
    </members>
</doc>
